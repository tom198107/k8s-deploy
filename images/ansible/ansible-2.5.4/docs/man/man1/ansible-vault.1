'\" t
.\"     Title: ansible-vault
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 05/31/2018
.\"    Manual: System administration commands
.\"    Source: Ansible 2.5.4
.\"  Language: English
.\"
.TH "ANSIBLE\-VAULT" "1" "05/31/2018" "Ansible 2\&.5\&.4" "System administration commands"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ansible-vault \- encryption/decryption utility for Ansible data files
.SH "SYNOPSIS"
.sp
ansible\-vault [create|decrypt|edit|encrypt|encrypt_string|rekey|view] [options] [vaultfile\&.yml]
.SH "DESCRIPTION"
.sp
can encrypt any structured data file used by Ansible\&. This can include \fBgroup_vars/\fR or \fBhost_vars/\fR inventory variables, variables loaded by \fBinclude_vars\fR or \fBvars_files\fR, or variable files passed on the ansible\- playbook command line with \fB\-e @file\&.yml\fR or \fB\-e @file\&.json\fR\&. Role variables and defaults are also included!
.sp
Because Ansible tasks, handlers, and other objects are data, these can also be encrypted with vault\&. If you\(cqd like to not expose what variables you are using, you can keep an individual task file entirely encrypted\&.
.sp
The password used with vault currently must be the same for all files you wish to use together at the same time\&.
.SH "COMMON OPTIONS"
.PP
\fB\-\-ask\-vault\-pass\fR
.RS 4
ask for vault password
.RE
.PP
\fB\-\-new\-vault\-id\fR \fINEW_VAULT_ID\fR
.RS 4
the new vault identity to use for rekey
.RE
.PP
\fB\-\-new\-vault\-password\-file\fR
.RS 4
new vault password file for rekey
.RE
.PP
\fB\-\-vault\-id\fR
.RS 4
the vault identity to use
.RE
.PP
\fB\-\-vault\-password\-file\fR
.RS 4
vault password file
.RE
.PP
\fB\-\-version\fR
.RS 4
show program\(cqs version number and exit
.RE
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
show this help message and exit
.RE
.PP
\fB\-v\fR, \fB\-\-verbose\fR
.RS 4
verbose mode (\-vvv for more, \-vvvv to enable connection debugging)
.RE
.SH "ACTIONS"
.PP
\fBencrypt\fR
.RS 4
encrypt the supplied file using the provided vault secret
.PP
\fB\-\-encrypt\-vault\-id\fR \fIENCRYPT_VAULT_ID\fR
.RS 4
the vault id used to encrypt (required if more than vault\-id is provided)
.RE
.PP
\fB\-\-output\fR
.RS 4
output file name for encrypt or decrypt; use \- for stdout
.RE
.RE
.PP
\fBrekey\fR
.RS 4
re\-encrypt a vaulted file with a new secret, the previous secret is required
.PP
\fB\-\-encrypt\-vault\-id\fR \fIENCRYPT_VAULT_ID\fR
.RS 4
the vault id used to encrypt (required if more than vault\-id is provided)
.RE
.RE
.PP
\fBencrypt_string\fR
.RS 4
encrypt the supplied string using the provided vault secret
.PP
\fB\-\-encrypt\-vault\-id\fR \fIENCRYPT_VAULT_ID\fR
.RS 4
the vault id used to encrypt (required if more than vault\-id is provided)
.RE
.PP
\fB\-\-output\fR
.RS 4
output file name for encrypt or decrypt; use \- for stdout
.RE
.PP
\fB\-\-stdin\-name\fR \fIENCRYPT_STRING_STDIN_NAME\fR
.RS 4
Specify the variable name for stdin
.RE
.PP
\fB\-n\fR, \fB\-\-name\fR
.RS 4
Specify the variable name
.RE
.PP
\fB\-p\fR, \fB\-\-prompt\fR
.RS 4
Prompt for the string to encrypt
.RE
.RE
.PP
\fBedit\fR
.RS 4
open and decrypt an existing vaulted file in an editor, that will be encryped again when closed
.PP
\fB\-\-encrypt\-vault\-id\fR \fIENCRYPT_VAULT_ID\fR
.RS 4
the vault id used to encrypt (required if more than vault\-id is provided)
.RE
.RE
.PP
\fBcreate\fR
.RS 4
create and open a file in an editor that will be encryped with the provided vault secret when closed
.PP
\fB\-\-encrypt\-vault\-id\fR \fIENCRYPT_VAULT_ID\fR
.RS 4
the vault id used to encrypt (required if more than vault\-id is provided)
.RE
.RE
.PP
\fBdecrypt\fR
.RS 4
decrypt the supplied file using the provided vault secret
.PP
\fB\-\-output\fR
.RS 4
output file name for encrypt or decrypt; use \- for stdout
.RE
.RE
.PP
\fBview\fR
.RS 4
open, decrypt and view an existing vaulted file using a pager using the supplied vault secret
.RE
.SH "ENVIRONMENT"
.sp
The following environment variables may be specified\&.
.sp
ANSIBLE_CONFIG \(em Override the default ansible config file
.sp
Many more are available for most options in ansible\&.cfg
.SH "FILES"
.sp
/etc/ansible/ansible\&.cfg \(em Config file, used if present
.sp
~/\&.ansible\&.cfg \(em User config file, overrides the default config if present
.SH "AUTHOR"
.sp
Ansible was originally written by Michael DeHaan\&.
.SH "COPYRIGHT"
.sp
Copyright \(co 2017 Red Hat, Inc | Ansible\&. Ansible is released under the terms of the GPLv3 License\&.
.SH "SEE ALSO"
.sp
\fBansible\fR(1), \fBansible\-config\fR(1), \fBansible\-console\fR(1), \fBansible\-doc\fR(1), \fBansible\-galaxy\fR(1), \fBansible\-inventory\fR(1), \fBansible\-playbook\fR(1), \fBansible\-pull\fR(1),
.sp
Extensive documentation is available in the documentation site: http://docs\&.ansible\&.com\&. IRC and mailing list info can be found in file CONTRIBUTING\&.md, available in: https://github\&.com/ansible/ansible
